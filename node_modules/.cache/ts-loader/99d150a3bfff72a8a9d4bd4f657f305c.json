{"remainingRequest":"C:\\Users\\sun.ruiqi\\LAE_dashboard\\code\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sun.ruiqi\\LAE_dashboard\\code\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\sun.ruiqi\\LAE_dashboard\\code\\src\\Views\\home\\WisdomFive\\opers\\metroPlanning.ts","dependencies":[{"path":"C:\\Users\\sun.ruiqi\\LAE_dashboard\\code\\src\\Views\\home\\WisdomFive\\opers\\metroPlanning.ts","mtime":1747970161597},{"path":"C:\\Users\\sun.ruiqi\\LAE_dashboard\\code\\babel.config.js","mtime":1747014229538},{"path":"C:\\Users\\sun.ruiqi\\LAE_dashboard\\code\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747302828451},{"path":"C:\\Users\\sun.ruiqi\\LAE_dashboard\\code\\node_modules\\babel-loader\\lib\\index.js","mtime":1747302829587},{"path":"C:\\Users\\sun.ruiqi\\LAE_dashboard\\code\\node_modules\\ts-loader\\index.js","mtime":1747302829764}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getMetroData","hideAllTreeInfo","useDisplayStore","metroStationArr","shMark","shPolyline","shBeam","addSubwayStation","data","stationMarkArr","key","item","coordinates","forEach","coors","index","cs","c","push","o","id","groupId","coordinate","coordinateType","anchors","imageSize","hoverImageSize","range","imagePath","fixedSize","autoHeight","displayMode","clusterByImage","priority","occlusionCull","AddPolyline","datas","beams","obj","color","style","thickness","intensity","flowRate","tiling","shape","depthTest","obj2","duration","interval","velocity","accessToSubwayLines","subwayObj","then","res","features","reg","RegExp","exec","properties","pyname","geometry","displayStore","initMetroPlanning","showMetroPlanning","SetShowMetroPlanning","cleanMetroPlanning","ax"],"sources":["C:\\Users\\sun.ruiqi\\LAE_dashboard\\code\\src\\Views\\home\\WisdomFive\\opers\\metroPlanning.ts"],"sourcesContent":["import { getMetroData } from '@/api/home'\nimport { hideAllTreeInfo } from '@/utils/showOrHideInfoTree'\nimport { useDisplayStore } from '@/stores/display'\n\n// 地铁站点坐标\nconst metroStationArr: any = []\n// 用于显示隐藏\nconst shMark: any = []\nconst shPolyline: any = []\nconst shBeam: any = []\n/**\n * 添加地铁站mark\n */\nconst addSubwayStation = async (data: any) => {\n    const stationMarkArr: any = []\n    for (const key in data) {\n        const item = data[key]\n        item.coordinates.forEach((coors: any, index: number) => {\n            coors.forEach((cs: any) => {\n                cs.forEach((c: any, index: number) => {\n                    c[2] = 0\n                    if (index % 30 <= 0) {\n                        metroStationArr.push(c)\n                    }\n                })\n            })\n        })\n    }\n    metroStationArr.forEach((item: any, index: number) => {\n        //支持经纬度坐标和普通投影坐标两种类型\n        const o = {\n            id: `SubwayStation_${index}`,\n            groupId: 'markerAdd',\n            coordinate: item, //坐标位置\n            coordinateType: 0, //默认0是投影坐标系，也可以设置为经纬度空间坐标系值为1\n            anchors: [-13, 30], //锚点，设置Marker的整体偏移，取值规则和imageSize设置的宽高有关，图片的左上角会对准标注点的坐标位置。示例设置规则：x=-imageSize.width/2，y=imageSize.height\n            imageSize: [25, 30], //图片的尺寸\n            hoverImageSize: [50, 50], //鼠标悬停时显示的图片尺寸\n            range: [1, 1000000], //可视范围\n            imagePath: `@path:智慧广州/customTag/mark/map_spot_ditie.png`, //显示图片路径\n            fixedSize: true, //图片固定尺寸，取值范围：false 自适应，近大远小，true 固定尺寸，默认值：false\n\n            autoHeight: false, // 自动判断下方是否有物体\n            displayMode: 2, //显示模式\n            clusterByImage: true, // 聚合时是否根据图片路径分类，即当多个marker的imagePath路径参数相同时按路径对marker分类聚合\n            priority: 0, //避让优先级\n            occlusionCull: true //是否参与遮挡剔除\n        }\n        shMark.push(`SubwayStation_${index}`)\n        stationMarkArr.push(o)\n    })\n//     const res = await __g.marker.add(stationMarkArr)\n//     if (res.result) {\n//         __g.marker.show(shMark)\n//     }\n}\n\n/**\n * 划线\n * @param data\n * @constructor\n */\nconst AddPolyline = async (data: any) => {\n    //添加相同点位的polyline和光流\n    const datas: any = []\n    const beams: any = []\n    for (const key in data) {\n        const item = data[key]\n        item.coordinates.forEach((coors: any, index: number) => {\n            coors.forEach((cs: any) => {\n                cs.forEach((c: any) => {\n                    c[2] = 0\n                })\n                const obj = {\n                    id: `metro_polyLine_${key}_${index}`, //折线唯一标识id\n                    coordinates: cs, //构成折线的坐标点数组\n                    color: item.color, //折线颜色\n                    style: 4, //折线样式 参考样式枚举：PolylineStyle\n                    thickness: 30, //折线宽度\n                    intensity: 8, //亮度\n                    flowRate: 0.2, //流速\n                    tiling: 0, //材质贴图平铺比例\n                    shape: 0, //折线类型 0：直线， 1：曲线\n                    depthTest: false, //是否做深度检测\n                    coordinateType: 1\n                }\n                const obj2 = {\n                    id: `metro_beam_${key}_${index}`, //折线唯一标识id\n                    coordinates: cs, //构成折线的坐标点数组\n                    duration: 3, //光流粒子的生命周期\n                    thickness: 5, //光流线的宽度比例\n                    interval: 2.5, //光流粒子发射间隔\n                    velocity: 0.7, //光流粒子的速度\n                    color: item.color //光流的颜色\n                }\n                shPolyline.push(`metro_polyLine_${key}_${index}`)\n                shBeam.push(`metro_beam_${key}_${index}`)\n                datas.push(obj)\n                beams.push(obj2)\n            })\n        })\n    }\n    // const res = await __g.polyline.add(datas)\n    // if (res.result) {\n    //     __g.polyline.show(shPolyline)\n    // }\n    // const res1 = await __g.beam.add(beams)\n    // if (res1.result) {\n    //     __g.beam.show(shBeam)\n    // }\n}\n\n/**\n * 获取地铁数据\n */\nconst accessToSubwayLines = async () => {\n    // 重置地铁对象的坐标数组\n    for (const key in subwayObj) {\n        subwayObj[key].coordinates = []\n    }\n    await getMetroData().then((res: any) => {\n        for (const key in subwayObj as any) {\n            res.features.forEach((item: any) => {\n                const reg = RegExp(key, 'i')\n                if (reg.exec(item.properties.pyname)) {\n                    subwayObj[key].coordinates.push(item.geometry.coordinates)\n                }\n            })\n        }\n    })\n}\n\nconst displayStore = useDisplayStore()\n/**\n * 初始化地铁规划\n */\nconst initMetroPlanning = async () => {\n    // __g.camera.stopAnimation()\n    // __g.camera.set(440394.227031, 2558071.219609, 27668.615, -70.734909, 178.340912, 1)\n    // // 开启电子地图\n    // __g.settings.setMapMode(\n    //     2,\n    //     {\n    //         //地图模式相关的参数，具体请参考API帮助文档\n    //         coordType: 0, // coordType: 坐标系类型，0：经纬度；1：本地（默认值是0）\n    //         serviceType: 4, // serviceType: 服务类型，0：MVT矢量切片； 1：WMTS(ArcGis) （默认值是0）\n    //         mapPoint: [430809.12, 2556481.54], // mapPoint: 同名点，取值范围：[x,y]，（默认值是[0, 0]）\n    //         longitude: 113.324593, // longitude: 经度，取值范围：[0~180]（默认值是0.0）\n    //         latitude: 23.106405, // latitude: 纬度，取值范围：[0~90]（默认值是0.0）\n    //         style: 'mapbox://styles/mapbox/dark-v9', // style: 风格路径，字符串地址，（默认值是 \"mapbox://styles/mapbox/streets-v10\"）\n    //         groundHeight: 150, // groundHeight: 地面高度，取值范围：[0~任意数值]（默认值是0.0）\n    //         renderMode: 0, // renderMode: 渲染模式，0：正常；1：透明；2：标注；3：贴地（默认值是0）\n    //         coordOrder: 0, // coordOrder: 坐标顺序，0: XY; 1: YX（默认值为0）\n    //         maxLevel: 22 // axLevel: WMTS服务最大显示层级，取值范围：[0~22]，默认值：10\n    //     },\n    //     () => {\n    //         console.log('设置大地图模式完成')\n    //     }\n    // )\n    // 隐藏所有图层\n    hideAllTreeInfo()\n    if (displayStore.showMetroPlanning) {\n        // __g.polyline.show(shPolyline)\n        // __g.beam.show(shBeam)\n        // __g.marker.show(shMark)\n    } else {\n        // 获取地铁数据\n        await accessToSubwayLines()\n        // 划线\n        await AddPolyline(subwayObj)\n        // 地铁站点\n        await addSubwayStation(subwayObj)\n        displayStore.SetShowMetroPlanning(true)\n    }\n}\n\n/**\n * 还原\n */\nconst cleanMetroPlanning = () => {\n    // __g.polyline.hide(shPolyline)\n    // __g.beam.hide(shBeam)\n    // __g.marker.hide(shMark)\n\n    // __g.polyline.clear(null)\n    // __g.beam.clear(null)\n    // __g.marker.clear(null)\n    // 关闭电子地图\n    // __g.settings.setMapMode(\n        // 0,\n        // {\n        //     //地图模式相关的参数，具体请参考API帮助文档\n        //     coordType: 0, // coordType: 坐标系类型，0：经纬度；1：本地（默认值是0）\n        //     serviceType: 4, // serviceType: 服务类型，0：MVT矢量切片； 1：WMTS(ArcGis) （默认值是0）\n        //     mapPoint: [430809.12, 2556481.54], // mapPoint: 同名点，取值范围：[x,y]，（默认值是[0, 0]）\n        //     longitude: 113.324593, // longitude: 经度，取值范围：[0~180]（默认值是0.0）\n        //     latitude: 23.106405, // latitude: 纬度，取值范围：[0~90]（默认值是0.0）\n        //     style: 'mapbox://styles/mapbox/dark-v9', // style: 风格路径，字符串地址，（默认值是 \"mapbox://styles/mapbox/streets-v10\"）\n        //     groundHeight: 150, // groundHeight: 地面高度，取值范围：[0~任意数值]（默认值是0.0）\n        //     renderMode: 0, // renderMode: 渲染模式，0：正常；1：透明；2：标注；3：贴地（默认值是0）\n        //     coordOrder: 0, // coordOrder: 坐标顺序，0: XY; 1: YX（默认值为0）\n        //     maxLevel: 22 // axLevel: WMTS服务最大显示层级，取值范围：[0~22]，默认值：10\n        // },\n    //     () => {\n    //         console.log('设置地图模式完成')\n    //     }\n    // )\n}\n\n// 地铁线路对象\nconst subwayObj: any = {\n    '1': {\n        color: '#efc649',\n        coordinates: []\n    },\n    '2': {\n        color: '#42608b',\n        coordinates: []\n    },\n    '3': {\n        color: '#e89249',\n        coordinates: []\n    },\n    '4': {\n        color: '#336d35',\n        coordinates: []\n    },\n    '5': {\n        color: '#bd2f3f',\n        coordinates: []\n    },\n    '6': {\n        color: '#6a2846',\n        coordinates: []\n    },\n    '8': {\n        color: '#367978',\n        coordinates: []\n    },\n    ax: {\n        color: '#b3ce30',\n        coordinates: []\n    }\n}\n\nexport { initMetroPlanning, cleanMetroPlanning }\n"],"mappings":"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","ignoreList":[]}]}