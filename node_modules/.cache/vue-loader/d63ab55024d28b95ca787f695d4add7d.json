{"remainingRequest":"C:\\Program Files\\TaiChiWorkSpace\\数字孪生—智慧广州\\code\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Program Files\\TaiChiWorkSpace\\数字孪生—智慧广州\\code\\src\\components\\player\\player.vue?vue&type=template&id=510e566f&scoped=true&ts=true","dependencies":[{"path":"C:\\Program Files\\TaiChiWorkSpace\\数字孪生—智慧广州\\code\\src\\components\\player\\player.vue","mtime":1747294821844},{"path":"C:\\Program Files\\TaiChiWorkSpace\\数字孪生—智慧广州\\code\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747302828451},{"path":"C:\\Program Files\\TaiChiWorkSpace\\数字孪生—智慧广州\\code\\node_modules\\babel-loader\\lib\\index.js","mtime":1747302829587},{"path":"C:\\Program Files\\TaiChiWorkSpace\\数字孪生—智慧广州\\code\\node_modules\\ts-loader\\index.js","mtime":1747302829764},{"path":"C:\\Program Files\\TaiChiWorkSpace\\数字孪生—智慧广州\\code\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1747302830655},{"path":"C:\\Program Files\\TaiChiWorkSpace\\数字孪生—智慧广州\\code\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747302828451},{"path":"C:\\Program Files\\TaiChiWorkSpace\\数字孪生—智慧广州\\code\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1747302829861}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2PgogICAgICAgIDxkaXYgaWQ9InBsYXllciIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij48L2Rpdj4KICAgICAgICA8dHJhbnNpdGlvbiBhcHBlYXIgbmFtZT0iY3VzdG9tLWNsYXNzZXMtdHJhbnNpdGlvbiIgZW50ZXItYWN0aXZlLWNsYXNzPSJhbmltYXRlX19hbmltYXRlZCBhbmltYXRlX19mYXN0ZXIgIGFuaW1hdGVfX2ZhZGVJbiAiIGxlYXZlLWFjdGl2ZS1jbGFzcz0iYW5pbWF0ZV9fYW5pbWF0ZWQgYW5pbWF0ZV9fZmFzdCBhbmltYXRlX19mYWRlT3V0ICI+CiAgICAgICAgICAgIDxkaXYgaWQ9ImFwcExvYWRpbmciIHYtc2hvdz0ibG9hZGluZyI+CiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJsb2FkaW5nLXdyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvYWRpbmctZ2lmIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJsb2FkaW5nLXRleHQiPnt7IGxvYWRpbmdUZXh0IH19PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC90cmFuc2l0aW9uPgogICAgPC9kaXY+Cg=="},{"version":3,"sources":["C:\\Program Files\\TaiChiWorkSpace\\数字孪生—智慧广州\\code\\src\\components\\player\\player.vue"],"names":[],"mappings":";IAEI,CAAC,CAAC,CAAC,CAAC;QACA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/L,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjD,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Program Files/TaiChiWorkSpace/数字孪生—智慧广州/code/src/components/player/player.vue","sourceRoot":"","sourcesContent":["<!-- 加载视频流组件 -->\n<template>\n    <div>\n        <div id=\"player\" style=\"display: none;\"></div>\n        <transition appear name=\"custom-classes-transition\" enter-active-class=\"animate__animated animate__faster  animate__fadeIn \" leave-active-class=\"animate__animated animate__fast animate__fadeOut \">\n            <div id=\"appLoading\" v-show=\"loading\">\n                <div id=\"loading-wrapper\">\n                    <div class=\"loading-gif\"></div>\n                    <div id=\"loading-text\">{{ loadingText }}</div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onMounted, onUnmounted, Ref, ref } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { DigitalTwinApiOptionsType, DigitalTwinPlayerOptionsType, DigitalTwinPlayerType, DigitalTwinApiType } from 'types__g'\nimport OnReady from '@/components/aircityutils/onReady'\nimport OnEvent from '@/components/aircityutils/Event'\nimport { useAirCityStore } from '@/stores/aircity'\nimport { useToolsStore } from '@/stores/tools'\nimport { useDialogStore } from '@/stores/dialog'\n\nconst AirCitystore = useAirCityStore()\nlet digitalTwinPlayer: Ref<DigitalTwinPlayerType | undefined> = ref()\nlet digitalApi: Ref<DigitalTwinApiType | undefined> = ref()\nconst loadingText = ref('系统正在加载......')\nconst loading = ref(true)\nconst reTimer = ref()\nconst tools = useToolsStore()\nconst useDialog = useDialogStore()\nconst initInterface = (iscloud: boolean) => {\n    let log = () => {}\n    //onReady\n    let _onReady = () => {\n        OnReady()\n        loading.value = false\n    }\n    //onEvent\n    let _onEvent = (e: any) => {\n        OnEvent(e)\n    }\n\n    let _onClose = (e: any) => {\n        //如果没有指定工程文件，则加上pid参数，pid=-1让服务器随便指定一个工程文件\n        //如果想访问指定的工程文件，则明确指定pid, 例如pid=3\n        if (e && e.code == 4009) {\n            if (location.href.indexOf('?') == -1) location.href += '?pid=-1'\n            else location.href += '&pid=-1'\n        }\n        const code_need_reconcent = [1006, 1008, 1013, 4e3, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4100, 4101, 4102, 4103, 4105, 4107]\n        if (e && code_need_reconcent.includes(e.code)) {\n            loading.value = true\n            loadingText.value = e.reason || '连接已断开，正在重新连接......'\n            AirCitystore.SetIsOnReady(false)\n            reTimer.value && clearInterval(reTimer.value)\n            let i = 5\n            reTimer.value = setInterval(() => {\n                loadingText.value = `${e.reason},${i}s后重新连接` || `连接已断开,${i}s后重新连接`\n                if (i == 0) {\n                    reTimer.value && clearInterval(reTimer.value)\n                    loadingText.value = `系统正在加载......`\n\n                    reConnect()\n                }\n                i--\n            }, 1000)\n        } else {\n            loadingText.value = `${e.reason}`\n        }\n    }\n    // _onApiVersion\n    let _onApiVersion = () => {}\n    // onloaded\n    let _onloaded = () => {\n        onResize()\n    }\n    //AirCityAPI初始化选项\n    let apiOptions: DigitalTwinApiOptionsType = {\n        onReady: _onReady,\n        onApiVersion: _onApiVersion,\n        onEvent: _onEvent,\n        onLog: log,\n        useColorLog: false //仅用于SDK测试页面，二次开发请设置为false\n    }\n    //2021.07.30 因为支持了端口映射，所以这个地方要处理一下内外网host的问题\n    //因为HostConfig里自动生成的是内网地址，所以这个地方要根据当前访问的地址替换一下\n    // if (location.protocol != \"file:\") {\n    //   HostConfig.Player =\n    //     location.hostname + \":\" + HostConfig.Player.split(\":\")[1];\n    // }\n    //Cloud需要同时初始化AirCityAPI和AirCityPlayer\n    if (iscloud) {\n        //AirCityPlayer\n        let options: DigitalTwinPlayerOptionsType = { domId: 'player' }\n        if (document.getElementById('player')) {\n            //需要显示视频流\n            options = {\n                pid: null,\n                domId: 'player',\n                iid: (window as any).Common_config.iid,\n                apiOptions: apiOptions,\n                keyEventReceiver: 'video', //三维键盘交互事件接收者，可选的值：document / video / none\n                ui: {\n                    startupInfo: true, //默认值为true，初始化过程中是否显示详细信息（如果不需要，直接去掉此属性即可）\n                    statusIndicator: true, //默认值为true，左上角闪烁的状态指示灯，可以从不同的颜色看出当前的状态\n                    statusButton: false, //默认值为false，是否在左下角显示信息按钮（如果不需要，直接去掉此属性即可）\n                    fullscreenButton: false, //默认值为false，是否在右下角显示全屏按钮（如果不需要，直接去掉此属性即可）\n                    homeButton: false, //默认值为false，是否在左下角显示“回到初始位置”按钮（如果不需要，直接去掉此属性即可）\n                    taskListBar: 1 //默认值为1，是否在下方显示“任务队列（API调用队列）”信息（0: 永不显示；1: 执行比较耗时的操作时显示；2: 一直显示）\n                },\n                onclose: _onClose,\n                onloaded: _onloaded\n            }\n        } else {\n            options = {\n                pid: null,\n                apiOptions: apiOptions\n            }\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;(options as any).actionEventHander = {\n            onmousedown: (e: any) => {\n                if (e.buttons === 1) {\n                    useDialog.setXY([e.x, e.y])\n                }\n            }\n        }\n        const Ip = HostConfig.Manager ? HostConfig.Manager : HostConfig.Player\n        // digitalTwinPlayer.value = new window.AirCityPlayer(Ip, options)\n        digitalTwinPlayer.value = new window.DigitalTwinPlayer(Ip, options)\n        AirCitystore.SetAirCityPlayer(digitalTwinPlayer.value)\n        digitalApi.value = digitalTwinPlayer.value.getAPI() // __g\n        // __g  new AirCityPlayer(Ip, options).getAPI()\n        AirCitystore.SetAirCityApi(digitalApi.value)\n\n        let res = document.getElementById('player') || null\n        let pre = res ? res.getElementsByTagName('pre') : null\n        let i = res ? res.getElementsByTagName('i') : null\n        if (pre) {\n            pre[0].style.left = '47%'\n            pre[0].style.top = '15%'\n        }\n        if (i) {\n            i[0].style.left = '47%'\n            i[0].style.top = '14%'\n        }\n    }\n}\nconst onResize = () => {\n    // aircityPlayer.value.ui_onResize && aircityPlayer.value.ui_onResize()\n    digitalTwinPlayer.value?.resize && digitalTwinPlayer.value.resize()\n}\nconst beforeunloadHandler = () => {\n    // aircityApi.value.reset();\n}\nconst mousedown = (e: any) => {\n    // console.log(e, \"mousedownmousedown\");\n}\nconst wheel = (e: any) => {\n    // console.log(e, \"wheelwheel\");\n}\nconst reConnect = () => {\n    initInterface(true)\n}\nonMounted(async () => {\n    initInterface(true)\n})\n\nonUnmounted(() => {\n    digitalTwinPlayer.value && digitalTwinPlayer.value.destroy()\n    digitalApi.value && digitalApi.value.destroy()\n    window.removeEventListener('resize', onResize)\n    window.removeEventListener('beforeunload', beforeunloadHandler)\n})\n</script>\n<style lang=\"scss\" scoped>\n#player {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 1;\n\n    .loading {\n        @include Width(50);\n        @include hHeight(50);\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        margin: auto;\n        @include FontSize(40);\n        font-weight: 600;\n\n        :deep(.el-loading-mask) {\n            background: rgba(0, 0, 0, 0) !important;\n\n            .circular {\n                @include Width(50);\n                @include hHeight(50);\n\n                .path {\n                    stroke: rgb(32, 158, 216);\n                }\n            }\n        }\n    }\n}\n\n#appLoading {\n    width: 100%;\n    height: 100%;\n    background: #000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    z-index: 1110;\n    opacity: 0.5;\n    display: none;\n\n    #loading-wrapper {\n        position: relative;\n        @include Width(800);\n        @include wHeight(190);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n\n        .loading-gif {\n            background: url('~@/assets/images/loading/loading.gif') no-repeat;\n            @include Width(800);\n            @include wHeight(160);\n            background-size: 100% 100%;\n        }\n\n        #loading-text {\n            position: absolute;\n            @include Top(160);\n            z-index: 111111;\n            @include Width(800);\n            @include wHeight(30);\n            @include LineHeight(30);\n            text-align: center;\n            @include FontSize(12);\n            color: #50a7d0;\n            font-family: Tencent, serif;\n        }\n    }\n}\n</style>\n"]}]}